@startuml

actor Client
participant "API Gateway/Lambda"
participant GetTranslationClientActivity
participant TranslationClientDao
database    DynamoDB

Client -> "API Gateway/Lambda" : HTTP Request
"API Gateway/Lambda" -> GetTranslationClientActivity : GetTranslationClientRequest
GetTranslationClientActivity -> TranslationClientDao : getTranslationClient(customerId, translationClientId)
TranslationClientDao -> DynamoDB : load(translationClientId)

alt if DynamoDB returns null
    DynamoDB --> TranslationClientDao : return with no item data
    TranslationClientDao --> GetTranslationClientActivity : throw TranslationClientNotFoundException
    GetTranslationClientActivity --> "API Gateway/Lambda" : propagate TranslationClientNotFoundException
    "API Gateway/Lambda" --> Client : return 400 response
else else continue
end

DynamoDB --> TranslationClientDao : return translationClient data

alt if customerId does not match the customerId of the saved TranslationClient
    TranslationClientDao --> GetTranslationClientActivity : throw SecurityException
    GetTranslationClientActivity --> "API Gateway/Lambda" : propagate SecurityException
    "API Gateway/Lambda" --> Client : return 400 response
else else continue
end

TranslationClientDao --> GetTranslationClientActivity : return TranslationClient object
GetTranslationClientActivity --> "API Gateway/Lambda" : return GetTranslationClientResult
"API Gateway/Lambda" --> Client : return 200 response with GetTranslationClientResult data

@enduml