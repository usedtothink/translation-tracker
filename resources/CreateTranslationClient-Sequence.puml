@startuml

actor Client
participant "API Gateway/Lambda"
participant CreateTranslationClientActivity
participant TranslationClientDao
database    DynamoDB

Client -> "API Gateway/Lambda" : HTTP Request
"API Gateway/Lambda" -> CreateTranslationClientActivity : CreateTranslationClientRequest

CreateTranslationClientActivity -> TranslationClientDao : createTranslationClient(generateTranslationClientId(), translationCaseID, translationClientName)
TranslationClientDao -> DynamoDB : save(newTranslationClient)

alt if translationClientName is identical to existing translationClientName
    DynamoDB --> TranslationClientDao: throw DuplicateTranslationClientException
    TranslationClientDao --> CreateTranslationClientActivity: throw DuplicateTranslationClientException
    CreateTranslationClientActivity --> "API Gateway/Lambda": propagate DuplicateTranslationClientException
    "API Gateway/Lambda" --> Client : return 400 response
else else continue
end

DynamoDB --> TranslationClientDao : return 200 response
TranslationClientDao --> CreateTranslationClientActivity : return newTranslationClient object
CreateTranslationClientActivity --> "API Gateway/Lambda" : return CreateTranslationClientResult
"API Gateway/Lambda" --> Client : return 200 response with CreateTranslationClientResult data

@enduml